@page

@model AddModel


<div class="container py-3">
    <h1 class="text-center mb-4">Emergency Report</h1>
    <div class="row">
        <div class="col-md-6">
            <div id="map" style="height: 500px"></div>
        </div>
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-body">
                    <form method="post">
              <div class="row">
                  <div class="col-md">
                      <div class="mb-3">
                        <label for="location" class="form-label">Longitude:</label>
                        <input asp-for="Location.Longitude" class="form-control" id="longitude" required>
                      </div>
                  </div>
                  <div class="col-md">
                      <div class="mb-3">
                        <label for="location" class="form-label">Latitude:</label>
                        <input asp-for="Location.Latitude" class="form-control" id="latitude" required>
                      </div>
                  </div>
              </div>            
                <div class="row">
                    <div class="col-md">
                        <div class="mb-3">
                            <label for="location" class="form-label">City:</label>
                            <input asp-for="Location.City" class="form-control" id="city" required>
                          </div>
                         
                    </div>
                    <div class="col-md">
                         <div class="mb-3">
                            <label for="location" class="form-label">Address:</label>
                            <textarea asp-for="Location.Address" class="form-control" rows="2" required></textarea>
                          </div>
                    </div>
                </div>
                <div class="mb-3">
                    <label for="description" class="form-label">Emergency:</label>
                    
                    <select asp-for="Emergency.TypeId" class="form-select" asp-items="@Html.GetListItems<EmergencyType>()">
                        @if (Model.EType==null)
                        {
                            <option value="" disabled selected>Select type...</option>
                        }
                        else
                        {
                            <option value="@((int) Model.EType)" selected>@Model.EType.ToEnumString()</option>
                        }

                    </select>
                    <span asp-validation-for="Emergency.TypeId" class="text-danger"></span>
                </div>
              <div class="mb-3">
                <label for="description" class="form-label">Description:</label>
                <textarea asp-for="Emergency.Description" class="form-control" id="description" rows="4" required></textarea>
              </div>
              <div class="card-footer text-end">
                  <button type="submit" class="btn btn-success text-end">Submit Report</button>
              </div>
              
            </form>
                </div>
            </div>
            
        </div>     
    </div>
</div>

@section Scripts{
   @* <script>
        navigator.geolocation.getCurrentPosition(position => {
            const { latitude, longitude } = position.coords;
            map.innerHTML = '<iframe width="700" height="300" src="https://maps.google.com/maps?q='+latitude+','+longitude+'&amp;z=15&amp;output=embed"></iframe>'
        });
    </script>*@
    
    <script>
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: 0, lng: 0},
                zoom: 15
            });
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    }; 

                    $('#longitude').val(pos.lng);
                    $('#latitude').val(pos.lat);
                    getCityName(pos.lat, pos.lng);

                    var marker = new google.maps.Marker({
                        position: pos,
                        map: map,
                        title: 'Current Location'
                    });
                    map.setCenter(pos);
                }, function() {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                handleLocationError(false, infoWindow, map.getCenter());
            }
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                                  'Error: The Geolocation service failed.' :
                                  'Error: Your browser doesn\'t support geolocation.');
            infoWindow.open(map);
        }

        function getCityName(lat, lng) {
          var geocoder = new google.maps.Geocoder();
          var latlng = new google.maps.LatLng(lat, lng);
          geocoder.geocode({'latLng': latlng}, function(results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
              if (results[0]) {
                for (var i = 0; i < results[0].address_components.length; i++) {
                  var component = results[0].address_components[i];
                  if (component.types.indexOf('locality') > -1) {
                    var cityName = component.long_name;
                    console.log(cityName);
                    $('#city').val(cityName);
                    return cityName;
                  }
                }
              } else {
                console.log('No results found');
              }
            } else {
              console.log('Geocoder failed due to: ' + status);
            }
          });
        }

        function getDistance(origin, destination) {
          var service = new google.maps.DistanceMatrixService();
          service.getDistanceMatrix({
            origins: [origin],
            destinations: [destination],
            travelMode: google.maps.TravelMode.DRIVING,
            unitSystem: google.maps.UnitSystem.METRIC,
            avoidHighways: false,
            avoidTolls: false
          }, function(response, status) {
            if (status == google.maps.DistanceMatrixStatus.OK && response.rows[0].elements[0].status != "ZERO_RESULTS") {
              var distance = response.rows[0].elements[0].distance.text;
              console.log(distance);
              return distance;
            } else {
              console.log("Unable to calculate distance.");
            }
          });
        }


    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCREgmLx8wio6hKOv4_CjGQr2arYeEWnNg&callback=initMap"></script>

}


